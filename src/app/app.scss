// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}


// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}


// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.1.
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}


// Creates text alignment classes based on screen size
// TODO this would be nice to add to the framework
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    // Provide text `[text-{bp}]` attributes for aligning text based on screen size
    [text#{$infix}-center] {
      text-align: center;
    }

    [text#{$infix}-left] {
      text-align: left;
    }

    [text#{$infix}-right] {
      text-align: right;
    }

    [hidden#{$infix}-up] {
      display: none;
    }
  }

  @include media-breakpoint-down($breakpoint, $grid-breakpoints) {
    [hidden#{$infix}-down] {
      display: none;
    }
  }
}
.toolbar-title-md {
  padding: 0 12px;
  font-size: 2rem;
  font-weight: 500;
  color: #e4e0e0;
}
.card-header-md{ color: #e4e0e0;padding:8px;text-align: left}
.scroll-content{overflow: auto;}
.card-md{    
  background: rgba(105, 104, 104, 0.58);
  color: #fff;}
  .fab-md{border: 1px solid rgba(105, 104, 104, 0.58);}
blockquote{font-size:1.5em;}
.tabs-md .tab-button, .tabs-md .tab-button-icon{color:#f3f3f3}
.tabs-md .tab-button[aria-selected=true], .tabs-md .tab-button[aria-selected=true] .tab-button-icon{
  color: rgb(32, 185, 154)
}
.content-md{background:#fff}

.btn3d:active:focus,
.btn3d:focus:hover,
.btn3d:focus {
	-moz-outline-style: none;
	outline: medium none;
}

.btn3d:active,
.btn3d.active {
	top: 2px;
}

.btn3d.btn-white {
	color: #666666;
	box-shadow: 0 0 0 1px #ebebeb inset, 0 0 0 2px rgba(255, 255, 255, 0.10) inset, 0 8px 0 0 #f5f5f5, 0 8px 8px 1px rgba(0, 0, 0, .2);
  background-color: #fff;
  background-position:1702px 1113px;
}

.btn3d.btn-white:active,
.btn3d.btn-white.active {
	color: #666666;
	box-shadow: 0 0 0 1px #ebebeb inset, 0 0 0 1px rgba(255, 255, 255, 0.15) inset, 0 1px 3px 1px rgba(0, 0, 0, .1);
	background-color: #fff;
}

.btn3d.btn-default {
	color: #666666;
	box-shadow: 0 0 0 1px #ebebeb inset, 0 0 0 2px rgba(255, 255, 255, 0.10) inset, 0 8px 0 0 #BEBEBE, 0 8px 8px 1px rgba(0, 0, 0, .2);
  // background-color: #f9f9f9;
  background-position: 1824px 763px;
  background-color: #BEBEBE;
  
}

.btn3d.btn-default:active,
.btn3d.btn-default.active {
	color: #666666;
	box-shadow: 0 0 0 1px #ebebeb inset, 0 0 0 1px rgba(255, 255, 255, 0.15) inset, 0 1px 3px 1px rgba(0, 0, 0, .1);

}

.btn3d.btn-primary {
	box-shadow: 0 0 0 1px #417fbd inset, 0 0 0 2px rgba(255, 255, 255, 0.15) inset, 0 8px 0 0 #4D5BBE, 0 8px 8px 1px rgba(0, 0, 0, 0.5);
  background-position: 2053px 762px;
  background-color: #4D5BBE;
}

.btn3d.btn-primary:active,
.btn3d.btn-primary.active {
	box-shadow: 0 0 0 1px #417fbd inset, 0 0 0 1px rgba(255, 255, 255, 0.15) inset, 0 1px 3px 1px rgba(0, 0, 0, 0.3);

}

.btn3d.btn-success {
	box-shadow: 0 0 0 1px #31c300 inset, 0 0 0 2px rgba(255, 255, 255, 0.15) inset, 0 8px 0 0 #5eb924, 0 8px 8px 1px rgba(0, 0, 0, 0.5);
  background-color: #78d739;
  background-position: 1939px 762px;
}

.btn3d.btn-success:active,
.btn3d.btn-success.active {
	box-shadow: 0 0 0 1px #30cd00 inset, 0 0 0 1px rgba(255, 255, 255, 0.15) inset, 0 1px 3px 1px rgba(0, 0, 0, 0.3);
	background-color: #78d739;
}

.btn3d.btn-info {
	box-shadow: 0 0 0 1px #00a5c3 inset, 0 0 0 2px rgba(255, 255, 255, 0.15) inset, 0 8px 0 0 #348FD2, 0 8px 8px 1px rgba(0, 0, 0, 0.5);
  background-color: #39B3D7;
  background-position: 1587px 706px;
}

.btn3d.btn-info:active,
.btn3d.btn-info.active {
	box-shadow: 0 0 0 1px #00a5c3 inset, 0 0 0 1px rgba(255, 255, 255, 0.15) inset, 0 1px 3px 1px rgba(0, 0, 0, 0.3);
	background-color: #39B3D7;
}

.btn3d.btn-99name {
	box-shadow: 0 0 0 1px #d79a47 inset, 0 0 0 2px rgba(255, 255, 255, 0.15) inset, 0 8px 0 0 #D79A34, 0 8px 8px 1px rgba(0, 0, 0, 0.5);
  background-color: #FEAF20;
  background-position:  1760px 1113px;
}

.btn3d.btn-99name:active,
.btn3d.btn-99name.active {
	box-shadow: 0 0 0 1px #d79a47 inset, 0 0 0 1px rgba(255, 255, 255, 0.15) inset, 0 1px 3px 1px rgba(0, 0, 0, 0.3);
	background-color: #FEAF20;
}

.btn3d.btn-tasbih {
	box-shadow: 0 0 0 1px #fc7a43 inset, 0 0 0 2px rgba(255, 255, 255, 0.15) inset, 0 8px 0 0 rgb(245, 71, 71), 0 8px 8px 1px rgba(0, 0, 0, 0.5);
  background-color: #D73814;
  background-position:1939px 706px;
}

.btn3d.btn-tasbih:active,
.btn3d.btn-tasbih.active {
  box-shadow: 0 0 0 1px #ff6423 inset, 0 0 0 2px rgba(255, 255, 255, 0.15) inset, 0 8px 0 0 #ff5656, 0 8px 8px 1px rgba(0, 0, 0, 0.5);
  	background-color: #D73814;
}

.btn3d.btn-magick {
	color: #fff;
	box-shadow: 0 0 0 1px #9a00cd inset, 0 0 0 2px rgba(255, 255, 255, 0.15) inset, 0 8px 0 0 #9823d5, 0 8px 8px 1px rgba(0, 0, 0, 0.5);
  background-color: #bb39d7;
  background-position: 1759px 878px;
}

.btn3d.btn-magick:active,
.btn3d.btn-magick.active {
	box-shadow: 0 0 0 1px #9a00cd inset, 0 0 0 1px rgba(255, 255, 255, 0.15) inset, 0 1px 3px 1px rgba(0, 0, 0, 0.3);
	background-color: #bb39d7;
}







.menu-container .btn3d.btn-white {

  background-position:1779px 789px;
}



.menu-container .btn3d.btn-default {

  background-position: 1848px 757px;

  
}



.menu-container .btn3d.btn-primary {
  background-position:1811px 757px;

}



.menu-container .btn3d.btn-success {
	
  background-position:1912px 757px;
}


.menu-container .btn3d.btn-info {
  background-position: 1880px 725px;
}


.menu-container .btn3d.btn-99name {
  background-position: 1811px 789px;
}


.menu-container .btn3d.btn-tasbih {
  background-position:1912px 725px;
}

.menu-container .btn3d.btn-magick {
  background-position: 1811px 822px;
}









.btn3d {
  border: 0;
  -webkit-transition: all 40ms linear;
  transition: all 40ms linear;
  border-radius: 50%;
  text-align: center;
  margin: auto;
 
  background-size: 525%;
  background-color: transparent;
  background-image: url('../assets/img/content.png');
}
.menu-container .btn3d {
  border: 0;
  -webkit-transition: all 40ms linear;
  transition: all 40ms linear;
  border-radius: 50%;
  text-align: center;
  margin: auto;
 
  background-size: 550%;
  background-color: transparent;
  background-image: url('../assets/img/content.png');
}

.menu-container ion-icon{
  position: relative;
    z-index: 0;
    display: block;
    overflow: hidden;
    width: 30px;
    height: 30px;
    font-size: 14px;
    line-height: 56px;
    text-overflow: ellipsis;
    text-transform: none;
    white-space: nowrap;
    margin:1px !important;
    cursor: pointer;

  }
  .menu-container ion-icon.btn3d{
    -webkit-box-shadow:none !important;
    box-shadow: none !important;
    background-color: transparent;

  }
  .alert-radio-label{
    color: #fafafaeb !important;
}